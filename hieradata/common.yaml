---
webapp_name: openmrs
server_timezone: America/New_York
ntp_server_1: 0.ubuntu.pool.ntp.org
ntp_server_2: 1.ubuntu.pool.ntp.org
ntp_server_3: 2.ubuntu.pool.ntp.org
ntp_server_4: 3.ubuntu.pool.ntp.org

pih_config: default
site_domain:

package_name: pihemr
package_release: 'unstable'
package_version: ''

maven_download_repo: https://s01.oss.sonatype.org/content/repositories/public
maven_config_group_id: org.pih.openmrs
maven_package_group_id: ''
maven_frontend_group_id: org.pih.openmrs

config_name: ""
config_version: ""

repo_url: ENC[guOgejmsDLkHjo2iCrV9MAWEt/Y9usi32Rs4qPepBu0=]
pihemr_debian_repo_url: https://openmrs.jfrog.io/artifactory/deb-pih/

mysql_server_id: 1
mysql_root_password: foo
mysql_bind_address: ENC[w63cm1CP/cpnvJPc6tWnYQ==:KRYftjrab5SC2AsLx1i4fQ==:ZnZnTVNwcGcyTStqNEdUdisweDZNZz09]
mysql_expire_logs_days: 10
mysql_innodb_buffer_pool_size: 1G
mysql_innodb_buffer_pool_instances: 1
mysql_key_buffer_size: 20M
mysql_sort_buffer_size: 262144
mysql_table_open_cache: 1500
mysql_binary_logging: true
mysql_net_read_timeout: 3600
mysql_net_write_timeout: 3600
mysql_wait_timeout: 28800
mysql_interactive_timeout: 28800
openmrs_db: openmrs
openmrs_db_user: openmrs
openmrs_db_password: foo
openmrs_warehouse_db: openmrs_warehouse
openmrs_auto_update_database: true
replication_db_user: replication
replication_db_password: foo
backup_db_user: backup
backup_db_password: foo
openmrs_percona_backup_enabled: false
openmrs_percona_install_mode: ''
backup_time: date +%Y%m%d-%H%M%S
tomcat: tomcat7
tomcat_home_dir: /home/tomcat7
tomcat_webapp_dir: /var/lib/tomcat7/webapps
tomcat_restart_nightly: false
tomcat_enable_http_8080: false
session_timeout: 30

#
openmrs_modules_temp_location: ''
openmrs_warfile_temp_location: ''

# For both Azure & Amigo backups
backup_file_prefix: foo
backup_hour: 1
backup_delete_older_than_x_days: 15
archive_hour: 3

# For Amigo backups only
remote_db_user: foo
remote_db_server: foo
remote_backup_dir: foo

sysadmin_email: emrsysadmin@pih.org

smtp_username: ENC[LhaBIAFkVOz/j+iAUzdIcZ4q8tHNzhyA+xMWx9zUkqI=:lbnhfiuIeHS4VMdI8DMV+A==:WjhNUkM0Q1FuVk05WFhUeGowVTE2dz09]
smtp_userpassword: ENC[VP7yvNiPEkclvmqxRxMc/MvEyAMcBG3ugJEwthDU0+0=:bZZy9YRqN4FEUJViJBIIpQ==:RjFzQW9qc2xVSU96cWNyOVQ2MUZUUT09]
smtp_mailhub: ENC[JdOD1O0xNt2gbxIpWb46BuifyaBN7fMs1crRUQ6MdL0=:ytHcoon6PuRkflRbfujubQ==:RkpZVk4rMm1iQm9DQlJpU013WE90dz09]

mirth_db: mirthdb
mirth_db_user: mirth
mirth_db_password: foo
mirth_user: mirth
mirth_password: Mirth123

pacs_mirebalais_ip_address: pacstest.pih.org
pacs_mirebalais_inbound_port: 6661
dicom_grid_haiti_ip_address: pacstest.pih.org
dicom_grid_haiti_inbound_port: 9999
mirth_inbound_from_pacs_mirebalais_port: 9999
mirth_inbound_from_pacs_boston_port: 9999
openmrs_mirebalais_inbound_port: 6663

remote_zlidentifier_url:
remote_zlidentifier_username:
remote_zlidentifier_password:

haiti_hiv_emr_link_url:

services_ensure: running
services_enable: true

junit_username: junit
junit_password: Junit123

commcare_user: ''
commcare_password: ''

# pwa_configuration--currently supports only a single PWA per site, we will need update this long-term
pwa_config_name: ''
pwa_config_url: ''
pwa_config_version: ''
pwa_enabled: false
pwa_webapp_name: ''

#dbevent
dbevent_enabled: true

# PETL
petl: "petl"
petl_version: "3.5.0-SNAPSHOT"
petl_site: ""
petl_user: "petl"
petl_home_dir: "/opt/petl"
petl_server_port: 9109

# PETL Java
petl_java_home: "/usr/lib/jvm/java-8-openjdk-amd64"
petl_java_opts: ""

# PETL Config
petl_config_name: zl-etl
petl_config_version: 1.9.0-SNAPSHOT
petl_config_dir: "configurations"

# PETL MySQL
petl_mysql_host: localhost
petl_mysql_port: 3306
petl_mysql_databaseName: openmrs
petl_mysql_options: "autoReconnect=true&sessionVariables=default_storage_engine%3DInnoDB&useUnicode=true&characterEncoding=UTF-8&useLegacyDatetimeCode=false&serverTimezone=${user.timezone}"
petl_mysql_user: foo
petl_mysql_password: foo

# PETL SQL Server
petl_sqlserver_host: "localhost"
petl_sqlserver_port: "1433"
petl_sqlserver_databaseName: openmrs_extractions
petl_sqlserver_user: foo
petl_sqlserver_password: bar

##  for when petl::mysql is enabled (used for malawi or for creating a petl database user)
petl_warehouse_db: openmrs_reporting
petl_mysql_user_ip: localhost

# PETL Crons
petl_error_subject: "%{hiera('petl_site')} PETL Errors"
petl_check_errors_cron_hour: '*/6'
petl_cron_time: "0 0 5 ? * *"

# PETL database for Apzu
install_petl_warehouse_db: false

# this is used to download the imb etl repo
imb_etl: false

# note that this should only be enabled if you are installing biometrics server on the same server as OpenMRS
# Enabling fingerprinting and connecting to a biometrics server is done via pih-config
biometrics_enabled: false
biometrics_webapp_name: ''
biometrics_port: 9009

# csrfguard
csrfguard_enabled: true

# feature toggle settings
insurance_collection: true
radiology_contrast_studies: false
appointmentscheduling_confidential: false
reportingui_ad_hoc_analysis: false
htmlformentryui_simpleform_navbuttons: false

# SSL certificates--use letencrypt by default
ssl_cert_dir: "/etc/letsencrypt/live/%{hiera('site_domain')}"
ssl_cert_file: 'fullchain.pem'
ssl_chain_file: 'fullchain.pem'
ssl_key_dir: "/etc/letsencrypt/live/%{hiera('site_domain')}"
ssl_key_file: 'privkey.pem'
ssl_use_letsencrypt: true
azure_dns_subscription_id: ENC[roYSeZU0cSjB6+P6aOWEXYVgCL64D33EQcfUd7L80970icq7M7LFmvlOSyYPI3bm]
azure_dns_tenant_id: ENC[5LWTjj76sYS2kxC4FktrecjxHpznSDVezymGgwlCzdNGmdymse5ihQOOKFpAwCJa]
azure_dns_app_id: ENC[shiW8Zw+zKNZjwEojjsm0pzj3SOJGUpRJl7pMZ9FULbrxVKYi/nWrAmRAGifWya3]
azure_dns_client_secret: ENC[f+Bvtjd7pyxAFpRgF3ZM8kzj5BfsQY3bZJ3jZrlebuPs5yF4zR69KWwP8l98Ut+5]
cert_cron_hour: 01
cert_cron_min: 00
apache_cron_restart_hour: 01
apache_cron_restart_min: 03

#Azcopy
az_secret: ENC[1oQfg4Gi51CDU3XTOIkHatJn2W+vAxx1Juj/wYnVwyRtEFk7hm7XAkA0CbKlsUcUdED4rBiSDIYAlTiO3aBryg==]
az_url: ENC[6NweILo1Eq7pKNo88HD1o/fyAWOijtE/7o3Pn+pd8tJ9q2Z1PerwvhtXMsVi2nl37EjQL96k8gApwQCE+nKnaw==]
az_backup_folder_path: ''

java_memory_parameters: '-Xmx2048m -Xms2048m'
#-XX:PermSize=256m -XX:MaxPermSize=512m -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC

java_debug_parameters: ''
java_profiler: ''

# Request logging for performance and usage tracking
activitylog_enabled: false
az_activitylog_backup_folder_path: ""

# Enforce acceptance of terms and conditions for usage
terms_and_conditions_enabled: false

# atomfeed
openmrs_modules_dir: /home/tomcat7/.OpenMRS/modules
atomfeed_version: 1.0.13-SNAPSHOT
atomfeed_repo_url: https://openmrs.jfrog.io/artifactory/snapshots

# docker and docker-compose
docker_repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
docker_compose_version: 1.27.4
docker_mssql_container_name: ''
docker_mssql_image: mcr.microsoft.com/mssql/server:2019-CU13-ubuntu-20.04
docker_mssql_volume_dir: /opt/docker-container/mssql/data
docker_mssql_port: 1433
docker_mssql_user_password: ''
docker_mysql_container_name: ''
docker_mysql_image: library/mysql:5.6
docker_mysql_volume_dir: ''
docker_mysql_root_password: ''
docker_mysql_port: 3306
docker_mysql_server_id: 1
docker_mysql_binlog_enabled: false
docker_mysql_max_allowed_packet: '1G'
docker_mysql_innodb_buffer_pool_size: '2G'
docker_group: ENC[h2rLm+7MduiV0n6kphuvHw==:fnzJi5CZcS03vAQDCjaF1Q==:Rmczclg4eVBLNDgvSGJrVGRVSWxpZz09]
docker_user: ENC[h2rLm+7MduiV0n6kphuvHw==:fnzJi5CZcS03vAQDCjaF1Q==:Rmczclg4eVBLNDgvSGJrVGRVSWxpZz09]

#frontend
frontend_name: ''
frontend_version: ''

# percona restore
percona_home_dir: "/home/percona"
percona_restore_dir: "/home/percona/restore"
percona_mysql_root_password: "%{hiera('mysql_root_password')}"

# TODO: Remove these as we go.  Below files are from pre-existing percona processes
perconaHomeDir: "/home/percona"
perconaBackupDir: "/home/percona/backups"
perconaLogs: "/home/percona/logs"
perconaLogFile: "foo"
perconaRestoreDir: "/home/percona/backups/openmrs"
perconaSite: "foo"
mysqlDataDir: "/var/lib/mysql"
mysqlDb: "foo"
openmrsHomeDir: "/home/tomcat7/.OpenMRS"
reportingTables: "foo"
reportingDumps: "foo"
mailTo: "%{hiera('sysadmin_email')}"
mailSubject: "${perconaSite} percona db restore success"
logFile: "/home/percona/logs/percoa-restore.log"
minPerconaDirSize: 10

# prometheus node exporter
node_exporter_version: 1.4.0
node_exporter_download_url: https://github.com/prometheus/node_exporter/releases/download/v%{hiera('node_exporter_version')}/node_exporter-%{hiera('node_exporter_version')}.linux-amd64.tar.gz
node_exporter_listen_ip: localhost
node_exporter_listen_port: 9999

# old os version
ubuntu_14: false

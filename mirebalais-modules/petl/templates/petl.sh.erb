#!/usr/bin/env bash

#!/bin/bash

source ./petl.env

echo "PETL_HOME = $PETL_HOME"
echo "PETL_JOB_DIR = $PETL_JOB_DIR"
echo "PETL_DATASOURCE_DIR = $PETL_DATASOURCE_DIR"

APP_USER="<%= @petl_user %>"

RED_COLOR="\e[00;31m"
GREEN_COLOR="\e[00;32m"

APP_PID=$(echo `ps -fe | grep "petl.sh" | grep -v grep | tr -s " "|cut -d" " -f2`)
CURRENT_USER=$(echo `whoami`)

APP_COMMAND="<%= @petl_java_home %>/bin/java -jar <%= @petl_java_opts %> /home<%= @petl_user %>/bin/petl-<%= @petl_version %>.jar"

# Stop the script if an error occurs
set -e

message() {
	echo -e "$1 $2 \e[00m"
}

start() {
	if [ -n "$APP_PID" ]; then
		message "$RED_COLOR" "Server is already running (pid: $TOMCAT_PID)"
	else
		message "$GREEN_COLOR" "Starting PETL"
		if [ "$CURRENT_USER" = "$APP_USER" ]; then
			$APP_COMMAND
		else
		  echo "$APP_COMMAND"
			sudo -u $APP_USER $APP_COMMAND
		fi
	fi
	return 0
}

status() {
	if [ -n "$APP_PID" ]; then
		message "$GREEN_COLOR" "PETL is running with pid: $APP_PID"
	else
		message "$RED_COLOR" "PETL is not running"
	fi
}

log() {
	tail -f /home/<%= @petl_user %>/logs/petl.log
}

stop() {
	if [ -n "$APP_PID" ]; then
    	message "$RED_COLOR Stopping Server"
		  kill $APP_PID
		  message "$RED_COLOR Server Stopped"
  	else
    	message "$RED_COLOR" "Server is not running"
  	fi
  	return 0
}

case $1 in
	start)
		start
		;;
	status)
		status
		;;
	log)
		log
		;;
	stop)
		stop
	;;
	restart)
		stop
		sleep 5
		start
	;;
	*)
	  echo "USAGE:"
	  echo ""
	  echo "  start: Starts server"
	  echo "  status: Returns the status of whether server is running"
	  echo "  stop: Stops server"
	  echo "  restart: Stops and then starts server"
	  echo "  log: Tails the server log file"
	  echo ""
	  ;;
esac
exit 0

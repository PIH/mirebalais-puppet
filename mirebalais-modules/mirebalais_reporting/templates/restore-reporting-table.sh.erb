#!/bin/bash

mailTo="<%= @sysadmin_email %>"
dbUser="root"
dbPass="<%= @mysql_root_password %>"
perconaHomeDir="<%= @perconaHomeDir %>"
perconaReportDir="<%= @perconaReportDir %>"
perconaLogFile="<%= @perconaLogFile %>"
perconaSite="<%= @perconaSite %>"
mailSubject="$perconaSite percona db restore success"

exec >> $perconaLogFile 2>&1

jobStartDate=`date +%Y%m%d-%H%M%S`
echo cronjob started on $jobStartDate

# file content comparison
# if the file if complete then restore the reporting_report_request data
STRING_COMPARE=$(tail -1 ${perconaReportDir}/reporting_report_request.sql)

if [[ $STRING_COMPARE == *"-- Dump completed on"* ]]; then
    echo ${STRING_COMPARE}
    echo reporting_report_request dump file is complete
    sleep 5
    mysql -u${dbUser} -p${dbPass} openmrs < ${perconaHomeDir}/sql/delete_reporting_report_request.sql
    mysql -u${dbUser} -p${dbPass} openmrs < ${perconaReportDir}/reporting_report_request.sql
    mysql -u${dbUser} -p${dbPass} -D openmrs -e "COMMIT;"
else
    echo ${STRING_COMPARE}
    echo reporting_report_request.sql dump file is not complete or is missing
    mail -s "$perconaSite: ${perconaReportDir}/reporting_report_request.sql does not exist or is incomplete" "$mailTo" < $perconaLogFile
fi

jobEndDate=`date +%Y%m%d-%H%M%S`
echo cronjob ended on $jobEndDate

# Mail all outputs of this execution, they'll all be a success
mail -s "$mailSubject" "$mailTo" < $perconaLogFile

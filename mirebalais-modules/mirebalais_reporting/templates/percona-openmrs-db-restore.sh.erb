#!/bin/bash

mailTo=<%= @sysadmin_email %>
perconaHomeDir="<%= @perconaHomeDir %>"
perconaBackupDir="<%= @perconaBackupDir %>"
perconaLogs="<%= @perconaLogs %>"
perconaRestoreDir="<%= @perconaRestoreDir %>"
perconaReportDir="<%= @perconaReportDir %>"
perconaSite="<%= @perconaSite %>"

mysqlDataDir="/var/lib/mysql"
mysqlDb="<%= @mysqlDb %>"

mailSubject="$perconaSite percona db restore success"
perconaLogFile="<%= @perconaLogFile %>"
minPerconaDirSize=<%= @minPerconaDirSize %>

dbUser="root"
dbPass="<%= @mysql_root_password %>"

exec > $perconaLogFile 2>&1

jobStartDate=`date +%Y%m%d-%H%M%S`
echo cronjob started on $jobStartDate

mkdir -p ${perconaHomeDir}
mkdir -p ${perconaBackupDir}
mkdir -p ${perconaLogs}
mkdir -p ${perconaReportDir}

## removing old reporting dump file
rm -rf ${perconaHomeDir}/reporting/*
if [ $? -eq 0 ]; then
        echo removing old reporting dump succesful
    else
        ## No hard exit here
        echo failure removing old reporting dump
        mail -s "$perconaSite: Failure removing old reporting dump" "$mailTo" < $perconaLogFile
fi

## creating new reporting data only dump
mysqldump -u${dbUser} -p${dbPass} --no-create-info --skip-triggers --extended-insert --lock-tables --quick openmrs reporting_report_request > ${perconaReportDir}/reporting_report_request.sql
if [ $? -eq 0 ]; then
        echo reporting_report_request data dumped successfully
    else
        ## No hard exit here
        echo errors dumping the reporting_report_request data
        mail -s "$perconaSite: Failure while dumping reporting_report_request data" "$mailTo" < $perconaLogFile
fi

## Ensure $perconaRestoreDir exists
if [ -d "$perconaRestoreDir" ]; then
        echo $perconaRestoreDir exist
else
        echo $perconaRestoreDir does not exist
        mail -s "$perconaSite: Failure $perconaRestoreDir does not exist" "$mailTo" < $perconaLogFile
        exit
fi

## Ensure the size is correct
openmrsDirSize=$(du -s $perconaRestoreDir | cut -f1)

if [ "$openmrsDirSize" -ge "$minPerconaDirSize" ]; then
            echo file size is correct
else
            echo file size isnot correct
            echo openmrsDirSize is $openmrsDirSize
            echo minPerconaDirSize is $minPerconaDirSize
            mail -s "$perconaSite: Failure $perconaRestoreDir dir size is small" "$mailTo" < $perconaLogFile
            exit
fi

## stop mysql before percona restore executes
/etc/init.d/mysql stop

if [ $? -eq 0 ]; then
        echo mysql stopped
    else
        echo mysql already not running
fi

rm -rf ${mysqlDataDir}/*
if [ $? -eq 0 ]; then
        echo $mysqlDataDir removed
else
        echo $mysqlDataDir wasnot available
fi

innobackupex --copy-back ${perconaRestoreDir}
if [ $? -eq 0 ]; then
        echo Percona DB was restored successfully
else
        echo Problem restoring percona db
        mail -s "$perconaSite: Failure restoring percona db" "$mailTo" < $perconaLogFile
        exit
fi

sleep 30
chown -R mysql:mysql ${mysqlDataDir}
sleep 10

/etc/init.d/mysql start
if [ $? -eq 0 ]; then
        sleep 10
        echo mysql started successfully
else
        echo mysql can not start
        mail -s "$perconaSite: Failure starting mysql" "$mailTo" < $perconaLogFile
        exit
fi

/etc/init.d/apache2 stop
/etc/init.d/tomcat7 stop
/etc/init.d/mysql stop
rm -rf /home/tomcat7/.OpenMRS/configuration_checksums
sleep 10

jobEndDate=`date +%Y%m%d-%H%M%S`
echo cronjob ended on $jobEndDate

# Mail all outputs of this execution, they'll all be a success
mail -s "$mailSubject" "$mailTo" < $perconaLogFile

/sbin/reboot